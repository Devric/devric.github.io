{
  "name": "wintersmith-tag",
  "version": "1.0.1",
  "description": "A wintersmith plugin to create tags.",
  "author": {
    "name": "Ribao Wei",
    "url": "wrb302@gmail.com"
  },
  "license": "MIT",
  "repository": {
    "type": "git",
    "url": "https://github.com/weiribao/wintersmith-tag"
  },
  "keywords": [
    "wintersmith",
    "wintersmith-plugin"
  ],
  "main": "lib/",
  "dependencies": {},
  "devDependencies": {
    "coffee-script": ">1.5",
    "wintersmith": "2.x"
  },
  "peerDependencies": {
    "wintersmith": "2.x"
  },
  "scripts": {
    "prepublish": "./bin/compile"
  },
  "bugs": {
    "url": "https://github.com/weiribao/wintersmith-tag/issues"
  },
  "readme": "wintersmith-tag\n==================\n\nThis is a plugin for [Wintersmith](https://github.com/jnordberg/wintersmith). It allows you to add tags to articles and list articles by tags.\n\nFor a complete example, please take a look at [thecoolwei.com](http://thecoolwei.com) and its [source](https://github.com/weiribao/weiribao.github.io).\n\n## How to use\n\n### Step1: install\n\nInstall globally or locally using npm\n\n```\nnpm install [-g] wintersmith-tag\n```\n\nand add `wintersmith-tag` to your project's config.json\n\n```json\n{\n  \"plugins\": [\n    \"wintersmith-tag\"\n  ]\n}\n```\n\n### Step2: set plugin options\nYou can specify options in config.json\n\n```json\n{\n    \"tag\": {\n        \"template\": \"tag-index.jade\",\n        \"perPage\": 4\n    }\n}\n```\n\nThis plugin is based on the built-in paginator plugin, so it uses the paginator's options by default. The only exception is it has its own default for `filename`. This is can be best understood by looking at the source code\n\n```coffeescript\npaginatorDefaults =\n    template: 'index.jade' # template that renders pages\n    articles: 'articles' # directory containing contents to paginate\n    first: 'index.html' # filename/url for first page\n    filename: 'page/%d/index.html' # filename for rest of pages\n    perPage: 2 # number of articles per page\n\ntagDefaults = \n    filename: 'tag/%s/%d/index.html' # => tag/:tagName/:pageNum/index.html\n    \noptions = _.extend {}, paginatorDefaults, env.config.paginator, tagDefaults, env.config.tag\n```\n\n### Step3: add tags to articles\nJust add `tags` to the metadata section of the article. Seperate multple tags by comma. Tag name can contain space.\n\n```\n---\ntitle: Hello world\ndate: 2012-10-14 8:31\ntemplate: article.jade\ntags: Algorithm, a happy story\n---\n```\n\n### Step4: modify your template\nSeveral new context variables and helper funtions are available in the template now.\n\n#### tagName\nThe `tagName` variable contains the tag name that articles are filtered by.\n\n#### env.helpers.getAllTags()\nThis function returns all tags in the project. It can be used to create a tag cloud on your frontpage, for example.\n\n#### env.helpers.getArticlesByTag(tagName)\nReturns all articles that has tag `tagName`\n\n#### env.helpers.getTagHome(tagName)\nReturns a `page` object that reperents the first page of the article list filtered by `tagName`. You can create a link to this page in template like\n\n```jade\na(href=env.helpers.getTagHome(tagName).url)= tagName\n```\n#### env.helpers.getTagsFromArticle(article)\nReturns an array of tags of current article.\n\n```jade\n- var tags = env.helpers.getTagsFromArticle(page)\neach tag in tags\n    a.big-tag(href=env.helpers.getTagHome(tag).url)= tag\n```\n### Step5: build & done!\n```\nwintersmith build -v\n```\nLists of articles filtered by tags have been created successfully!\n```\n/tag/algorithm/1/index.html\n/tag/algorithm/2/index.html\n...\n```\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/weiribao/wintersmith-tag",
  "_id": "wintersmith-tag@1.0.1",
  "dist": {
    "shasum": "b2741b35589f62ba75bce4636cad58007dc16674"
  },
  "_from": "wintersmith-tag@",
  "_resolved": "https://registry.npmjs.org/wintersmith-tag/-/wintersmith-tag-1.0.1.tgz"
}
